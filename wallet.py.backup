from pycoin.key.BIP32Node import BIP32Node
from smtplib import SMTP_SSL
import sqlite3
from sys import argv

def get_wallet_key_by_email(email):
    conn = sqlite3.connect('var/wallet_keys.sqlite3')
    c = conn.cursor()
    query = (email, )
    wallet_keys = c.execute('SELECT wallet_key FROM wallet_keys WHERE email=?', query)
    wallet_key = wallet_keys.fetchone()[0]
    conn.close()
    return wallet_key
    #return 'xpub661MyMwAqRbcFCfnPWXdSgCTfhXqvkzBRU5wfths7Fnm45ypp2KBFB6UwVdyy4d1rMTuxNRAhaYRRU6oEkzDfujTELLa9MEFyYjXrtuyLRc'

#returns true if the email is not in the database, else false
def unknown_email(email):
    conn = sqlite3.connect('var/wallet_keys.sqlite3')
    c = conn.cursor()
    query = (email, )
    c.execute('SELECT email FROM wallet_keys WHERE email=?', query)
    #print("output: ",c.fetchall())
    known_emails = c.fetchall()
    conn.close()
    if known_emails == []:
        return True
    return False

#REQUIRES: email not be an email already in the database
#sends the standard new user email to email
def send_email_to_new_user(email):
    system_email = 'jmdelaney8@gmail.com'
    standard_msg = "Hello, you have received money. You can retrieve it at my website"
    server = SMTP_SSL("smtp.gmail.com", 465)
    server.login(system_email, "klcfkamvubxpcqit")
    server.sendmail(system_email,email, standard_msg)
    server.quit()
